version: '3.8'

services:
  # DATABASE
  postgres:
    image: postgres:14-alpine
    container_name: predictsense-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-predictsense}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-predictsensepass}
      POSTGRES_DB: ${POSTGRES_DB:-predictsense}
      PGDATA: /data/postgres
    volumes:
      - postgres_data:/data/postgres
      - ./deployment/scripts/init-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U predictsense"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - predictsense-network

  # CACHE
  redis:
    image: redis:7-alpine
    container_name: predictsense-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-predictsensepass}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - predictsense-network

  # MESSAGING
  rabbitmq:
    image: rabbitmq:3.10-management-alpine
    container_name: predictsense-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-predictsense}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-predictsensepass}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-/}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - predictsense-network

networks:
  predictsense-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data: